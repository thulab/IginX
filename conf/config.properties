####################
### 元数据
####################
# iginx 绑定的 ip
ip=0.0.0.0

# iginx 绑定的端口
port=6888

# iginx 本身的用户名
username=root

# iginx 本身的密码
password=root

# 时序数据库列表，使用','分隔不同实例
storageEngineList=127.0.0.1#6667#iotdb11#username=root#password=root#sessionPoolSize=20#has_data=false#is_read_only=false
#storageEngineList=127.0.0.1#8086#influxdb#url=http://localhost:8086/#token=your-token#organization=your-organization#has_data=false
#storageEngineList=127.0.0.1#4242#opentsdb#url=http://127.0.0.1
#storageEngineList=11.101.17.21#5432#timescaledb#username=postgres#password=123456
#storageEngineList=11.101.17.21#5432#postgresql#username=postgres#password=123456

# 写入的副本个数
replicaNum=1

# 底层数据库类名
databaseClassNames=iotdb11=cn.edu.tsinghua.iginx.iotdb.IoTDBStorage,iotdb12=cn.edu.tsinghua.iginx.iotdb.IoTDBStorage,influxdb=cn.edu.tsinghua.iginx.influxdb.InfluxDBStorage
#,opentsdb=cn.edu.tsinghua.iginx.opentsdb.OpenTSDBStorage,timescaledb=cn.edu.tsinghua.iginx.timescaledb.TimescaleDBStorage,postgresql=cn.edu.tsinghua.iginx.postgresql.PostgreSQLStorage

#统计信息收集类
# statisticsCollectorClassName=cn.edu.tsinghua.iginx.statistics.StatisticsCollector

# 统计信息打印间隔，单位毫秒
# statisticsLogInterval=5000

# 逻辑层优化策略
queryOptimizer=remove_not,filter_fragment

# 约束
constraintChecker=naive

# 物理层优化策略
physicalOptimizer=naive

# 内存任务执行线程池
memoryTaskThreadPoolSize=200

# 每个存储节点对应的工作线程数
physicalTaskThreadPoolSizePerStorage=100

# 每个存储节点任务最大堆积数
maxCachedPhysicalTaskPerStorage=500

# 策略类名
policyClassName=cn.edu.tsinghua.iginx.policy.naive.NaivePolicy
#policyClassName=cn.edu.tsinghua.iginx.policy.simple.SimplePolicy

##########################
### simple policy 策略配置
##########################

reAllocatePeriod=300000

enableStorageGroupValueLimit=true

storageGroupValueLimit=200.0

# 是否允许通过环境变量设置参数
enableEnvParameter=false

####################
### Rest 服务配置
####################

# rest 绑定的 ip
restIp=0.0.0.0

# rest 绑定的端口
restPort=6666

# 是否启用 rest 服务
enableRestService=true

# 乱序数据 margin, 单位是秒
disorderMargin=10

# rest 异步执行并发数
asyncRestThreadPool=100

####################
### 元数据配置
####################

# 目前支持 zookeeper, file, etcd
# 文件是默认的存储后端，方便部署
metaStorage=zookeeper

# 如果使用 file 作为元数据存储后端，需要提供
#fileDataDir=meta

# 如果使用 zookeeper 作为元数据存储后端，需要提供
zookeeperConnectionString=127.0.0.1:2181

# 如果使用 etcd 作为元数据存储后端，需要提供，如果有多个 etcd 实例，以逗号分隔
#etcdEndpoints=http://localhost:2379

# 是否开启元数据内存管理
enable_meta_cache_control=false

# 分片缓存最大内存限制，单位为 KB，默认 128 MB
fragment_cache_threshold=131072

####################
### MQTT 配置
####################

enable_mqtt=false

mqtt_host=0.0.0.0

mqtt_port=1883

mqtt_handler_pool_size=1

mqtt_payload_formatter=cn.edu.tsinghua.iginx.mqtt.JsonPayloadFormatter

mqtt_max_message_size=1048576

##########################
### 执行层配置
##########################

enablePushDown=false

useStreamExecutor=false

##########################
### 内存控制
##########################

enable_memory_control=false

system_resource_metrics=default

heap_memory_threshold=0.9

system_memory_threshold=0.9

system_cpu_threshold=0.9

##########################
### Python配置
##########################
# python脚本启动命令，建议使用"which python"查询出的绝对路径，如下所示
#pythonCMD=/Library/Frameworks/Python.framework/Versions/3.7/bin/python3
pythonCMD=python3

# 是否初始化配置文件内指定的UDF/Transform
needInitBasicUDFFunctions=false

##########################
### Transform配置
##########################
# 流式执行时，每批数据的大小
batchSize=50
# Transform任务执行线程池
transformTaskThreadPoolSize=10
# Transform最大重试次数
transformMaxRetryTimes=3
