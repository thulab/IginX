name: Capacity Expansion Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
#  IoTDB-Test:
#    strategy:
#      fail-fast: false
#      max-parallel: 20
#      matrix:
#        java: [ 8 ]
#        python-version: [ "3.7" ]
#        os: [ ubuntu-latest, macos-latest ]
#        DB-name: [ "iotdb11", "iotdb12" ]
#        Test-Way: [OriHasDataExpHasData, OriHasDataExpNoData, OriNoDataExpHasData, OriNoDataExpNoData]
#    runs-on: ${{ matrix.os }}
#    env:
#      VERSION: 0.6.0-SNAPSHOT
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v3
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install Python dependencies
#        run: |
#          python -m pip install --upgrade pip
#      - name: Set up JDK ${{ matrix.java }}
#        uses: actions/setup-java@v1
#        with:
#          java-version: ${{ matrix.java }}
#      - name: Cache Maven packages
#        uses: actions/cache@v2.1.5
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Run ZooKeeper
#        run: |
#          if [ "$RUNNER_OS" == "Linux" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/zk.sh"
#            "${GITHUB_WORKSPACE}/.github/zk.sh"
#          elif [ "$RUNNER_OS" == "macOS" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/zk_macos.sh"
#            "${GITHUB_WORKSPACE}/.github/zk_macos.sh"
#          else
#            echo "$RUNNER_OS is not supported"
#            exit 1
#          fi
#      - name: Run IoTDB11 and change default config
#        run: |
#          if [ "$RUNNER_OS" == "Linux" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data.sh"
#            "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data.sh"
#          elif [ "$RUNNER_OS" == "macOS" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data_macos.sh"
#            "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data_macos.sh"
#          else
#            echo "$RUNNER_OS is not supported"
#            exit 1
#          fi
#          mv test/pom.xml test/pom.xml.backup
#          mv test/pom.xml.${{matrix.DB-name}} test/pom.xml
#      - name: Install with Maven
#        run: mvn clean package -DskipTests
#      - name: Write history Data
#        run: |
#          mvn test -q -Dtest=IoTDBHistoryDataGenerator#${{matrix.Test-Way}} -DfailIfNoTests=false
#          sleep 10
#      - name: Install with Maven Again
#        run: |
#          mv test/pom.xml test/pom.xml.${{matrix.DB-name}}
#          mv test/pom.xml.backup test/pom.xml
#          mvn clean package -DskipTests
#      - name: Start IginX
#        run: |
#          chmod +x "${GITHUB_WORKSPACE}/core/target/iginx-core-${VERSION}/sbin/start_iginx.sh"
#          nohup "${GITHUB_WORKSPACE}/core/target/iginx-core-${VERSION}/sbin/start_iginx.sh" &
#      - name: A Lame Integration Test with Maven for IoTDB
#        run: |
#          if [ "${{matrix.DB-name}}" == "iotdb11" ]; then
#            mvn test -q -Dtest=IoTDB11HistoryDataCapacityExpansionIT#${{matrix.Test-Way}} -DfailIfNoTests=false
#          elif [ "${{matrix.DB-name}}" == "iotdb12" ]; then
#            mvn test -q -Dtest=IoTDB12HistoryDataCapacityExpansionIT#${{matrix.Test-Way}} -DfailIfNoTests=false
#          fi
#      - uses: codecov/codecov-action@v1
#        with:
#          file: ./**/target/site/jacoco/jacoco.xml
#          name: codecov
#
#  IoTDB-Tag-Test:
#    strategy:
#      fail-fast: false
#      max-parallel: 20
#      matrix:
#        java: [ 8 ]
#        python-version: [ "3.7" ]
#        os: [ ubuntu-latest, macos-latest ]
#        DB-name: [ "iotdb11", "iotdb12" ]
#        Test-Way: [ OriHasDataExpHasData, OriHasDataExpNoData, OriNoDataExpHasData, OriNoDataExpNoData ]
#    runs-on: ${{ matrix.os }}
#    env:
#      VERSION: 0.6.0-SNAPSHOT
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v3
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install Python dependencies
#        run: |
#          python -m pip install --upgrade pip
#      - name: Set up JDK ${{ matrix.java }}
#        uses: actions/setup-java@v1
#        with:
#          java-version: ${{ matrix.java }}
#      - name: Cache Maven packages
#        uses: actions/cache@v2.1.5
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Run ZooKeeper
#        run: |
#          if [ "$RUNNER_OS" == "Linux" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/zk.sh"
#            "${GITHUB_WORKSPACE}/.github/zk.sh"
#          elif [ "$RUNNER_OS" == "macOS" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/zk_macos.sh"
#            "${GITHUB_WORKSPACE}/.github/zk_macos.sh"
#          else
#            echo "$RUNNER_OS is not supported"
#            exit 1
#          fi
#      - name: Run IoTDB11 and change default config
#        run: |
#          if [ "$RUNNER_OS" == "Linux" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data.sh"
#            "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data.sh"
#          elif [ "$RUNNER_OS" == "macOS" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data_macos.sh"
#            "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data_macos.sh"
#          else
#            echo "$RUNNER_OS is not supported"
#            exit 1
#          fi
#          mv test/pom.xml test/pom.xml.backup
#          mv test/pom.xml.${{matrix.DB-name}} test/pom.xml
#      - name: Install with Maven
#        run: mvn clean package -DskipTests
#      - name: Write history Data
#        run: |
#          mvn test -q -Dtest=IoTDBHistoryDataGenerator#${{matrix.Test-Way}} -DfailIfNoTests=false
#          sleep 10
#      - name: Install with Maven Again
#        run: |
#          mv test/pom.xml test/pom.xml.${{matrix.DB-name}}
#          mv test/pom.xml.backup test/pom.xml
#          mvn clean package -DskipTests
#      - name: Start IginX
#        run: |
#          chmod +x "${GITHUB_WORKSPACE}/core/target/iginx-core-${VERSION}/sbin/start_iginx.sh"
#          nohup "${GITHUB_WORKSPACE}/core/target/iginx-core-${VERSION}/sbin/start_iginx.sh" &
#      - name: A Lame Integration Test with Maven for IoTDB
#        run: mvn test -q -Dtest=TagCapExpIT#${{matrix.DB-name}}_IT -DfailIfNoTests=false
#      - uses: codecov/codecov-action@v1
#        with:
#          file: ./**/target/site/jacoco/jacoco.xml
#          name: codecov
#
#  IoTDB-SQLSession-Test:
#    strategy:
#      fail-fast: false
#      max-parallel: 20
#      matrix:
#        java: [ 8 ]
#        python-version: [ "3.7" ]
#        os: [ ubuntu-latest, macos-latest ]
#        DB-name: [ "iotdb11", "iotdb12" ]
#        Test-Way: [ OriHasDataExpHasData, OriHasDataExpNoData, OriNoDataExpHasData, OriNoDataExpNoData ]
#    runs-on: ${{ matrix.os }}
#    env:
#      VERSION: 0.6.0-SNAPSHOT
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v3
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install Python dependencies
#        run: |
#          python -m pip install --upgrade pip
#      - name: Set up JDK ${{ matrix.java }}
#        uses: actions/setup-java@v1
#        with:
#          java-version: ${{ matrix.java }}
#      - name: Cache Maven packages
#        uses: actions/cache@v2.1.5
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Run ZooKeeper
#        run: |
#          if [ "$RUNNER_OS" == "Linux" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/zk.sh"
#            "${GITHUB_WORKSPACE}/.github/zk.sh"
#          elif [ "$RUNNER_OS" == "macOS" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/zk_macos.sh"
#            "${GITHUB_WORKSPACE}/.github/zk_macos.sh"
#          else
#            echo "$RUNNER_OS is not supported"
#            exit 1
#          fi
#      - name: Run IoTDB11 and change default config
#        run: |
#          if [ "$RUNNER_OS" == "Linux" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data.sh"
#            "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data.sh"
#          elif [ "$RUNNER_OS" == "macOS" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data_macos.sh"
#            "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data_macos.sh"
#          else
#            echo "$RUNNER_OS is not supported"
#            exit 1
#          fi
#          mv test/pom.xml test/pom.xml.backup
#          mv test/pom.xml.${{matrix.DB-name}} test/pom.xml
#      - name: Install with Maven
#        run: mvn clean package -DskipTests
#      - name: Write history Data
#        run: |
#          mvn test -q -Dtest=IoTDBHistoryDataGenerator#${{matrix.Test-Way}} -DfailIfNoTests=false
#          sleep 10
#      - name: Install with Maven Again
#        run: |
#          mv test/pom.xml test/pom.xml.${{matrix.DB-name}}
#          mv test/pom.xml.backup test/pom.xml
#          mvn clean package -DskipTests
#      - name: Start IginX
#        run: |
#          chmod +x "${GITHUB_WORKSPACE}/core/target/iginx-core-${VERSION}/sbin/start_iginx.sh"
#          nohup "${GITHUB_WORKSPACE}/core/target/iginx-core-${VERSION}/sbin/start_iginx.sh" &
#      - name: A Lame Integration Test with Maven for IoTDB
#        run: mvn test -q -Dtest=SQLCapExpSessioinIT#${{matrix.DB-name}}_IT -DfailIfNoTests=false
#      - uses: codecov/codecov-action@v1
#        with:
#          file: ./**/target/site/jacoco/jacoco.xml
#          name: codecov
#
#  IoTDB-Session-Test:
#    strategy:
#      fail-fast: false
#      max-parallel: 20
#      matrix:
#        java: [ 8 ]
#        python-version: [ "3.7" ]
#        os: [ ubuntu-latest, macos-latest ]
#        DB-name: [ "iotdb11", "iotdb12" ]
#        Test-Way: [ OriHasDataExpHasData, OriHasDataExpNoData, OriNoDataExpHasData, OriNoDataExpNoData ]
#    runs-on: ${{ matrix.os }}
#    env:
#      VERSION: 0.6.0-SNAPSHOT
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v3
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install Python dependencies
#        run: |
#          python -m pip install --upgrade pip
#      - name: Set up JDK ${{ matrix.java }}
#        uses: actions/setup-java@v1
#        with:
#          java-version: ${{ matrix.java }}
#      - name: Cache Maven packages
#        uses: actions/cache@v2.1.5
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Run ZooKeeper
#        run: |
#          if [ "$RUNNER_OS" == "Linux" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/zk.sh"
#            "${GITHUB_WORKSPACE}/.github/zk.sh"
#          elif [ "$RUNNER_OS" == "macOS" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/zk_macos.sh"
#            "${GITHUB_WORKSPACE}/.github/zk_macos.sh"
#          else
#            echo "$RUNNER_OS is not supported"
#            exit 1
#          fi
#      - name: Run IoTDB11 and change default config
#        run: |
#          if [ "$RUNNER_OS" == "Linux" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data.sh"
#            "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data.sh"
#          elif [ "$RUNNER_OS" == "macOS" ]; then
#            chmod +x "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data_macos.sh"
#            "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data_macos.sh"
#          else
#            echo "$RUNNER_OS is not supported"
#            exit 1
#          fi
#          mv test/pom.xml test/pom.xml.backup
#          mv test/pom.xml.${{matrix.DB-name}} test/pom.xml
#      - name: Install with Maven
#        run: mvn clean package -DskipTests
#      - name: Write history Data
#        run: |
#          mvn test -q -Dtest=IoTDBHistoryDataGenerator#${{matrix.Test-Way}} -DfailIfNoTests=false
#          sleep 10
#      - name: Install with Maven Again
#        run: |
#          mv test/pom.xml test/pom.xml.${{matrix.DB-name}}
#          mv test/pom.xml.backup test/pom.xml
#          mvn clean package -DskipTests
#      - name: Start IginX
#        run: |
#          chmod +x "${GITHUB_WORKSPACE}/core/target/iginx-core-${VERSION}/sbin/start_iginx.sh"
#          nohup "${GITHUB_WORKSPACE}/core/target/iginx-core-${VERSION}/sbin/start_iginx.sh" &
#      - name: A Lame Integration Test with Maven for IoTDB
#        run: mvn test -q -Dtest=IoTDBBaseSessionCapExpIT#${{matrix.DB-name}}_IT -DfailIfNoTests=false
#      - uses: codecov/codecov-action@v1
#        with:
#          file: ./**/target/site/jacoco/jacoco.xml
#          name: codecov
#

  setup:
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        java: [ 8 ]
        python-version: [ "3.7" ]
        os: [ ubuntu-latest, macos-latest ]
        DB-name: [ "iotdb11", "iotdb12" ]
    runs-on: ${{ matrix.os }}
    env:
      VERSION: 0.6.0-SNAPSHOT
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run ZooKeeper
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            chmod +x "${GITHUB_WORKSPACE}/.github/zk.sh"
            "${GITHUB_WORKSPACE}/.github/zk.sh"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            chmod +x "${GITHUB_WORKSPACE}/.github/zk_macos.sh"
            "${GITHUB_WORKSPACE}/.github/zk_macos.sh"
          else
            echo "$RUNNER_OS is not supported"
            exit 1
          fi
      - name: Run IoTDB11 and change default config
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            chmod +x "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data.sh"
            "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data.sh"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            chmod +x "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data_macos.sh"
            "${GITHUB_WORKSPACE}/.github/${{matrix.DB-name}}_history_data_macos.sh"
          else
            echo "$RUNNER_OS is not supported"
            exit 1
          fi
          mv test/pom.xml test/pom.xml.backup
          mv test/pom.xml.${{matrix.DB-name}} test/pom.xml
#      - name: Install with Maven
#        run: mvn clean package -DskipTests
      - name: Install with Maven Again
        run: |
          mv test/pom.xml test/pom.xml.${{matrix.DB-name}}
          mv test/pom.xml.backup test/pom.xml
          mvn clean package -DskipTests
      - name: Start IginX
        run: |
          chmod +x "${GITHUB_WORKSPACE}/core/target/iginx-core-${VERSION}/sbin/start_iginx.sh"
          nohup "${GITHUB_WORKSPACE}/core/target/iginx-core-${VERSION}/sbin/start_iginx.sh" &

#  IoTDB-Rest-Test:
#    needs: setup
#    strategy:
#      fail-fast: false
#      max-parallel: 20
#      matrix:
#        java: [ 8 ]
#        DB-name: [ "iotdb11", "iotdb12" ]
#        os: [ ubuntu-latest, macos-latest ]
#        Test-Way: [ OriHasDataExpHasData, OriHasDataExpNoData, OriNoDataExpHasData, OriNoDataExpNoData ]
#        runs-on: ${{ matrix.os }}
#    env:
#      VERSION: 0.6.0-SNAPSHOT
#    steps:
#      - uses: actions/checkout@v2
#      - name: A Lame Integration Test with Maven for IoTDB
#        run: mvn test -q -Dtest=RestCapExpIT#${{matrix.DB-name}}_IT -DfailIfNoTests=false
#      - uses: codecov/codecov-action@v1
#        with:
#          file: ./**/target/site/jacoco/jacoco.xml
#          name: codecov

  IoTDB-Tag-Test:
    needs: setup
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        java: [ 8 ]
        os: [ ubuntu-latest, macos-latest ]
        DB-name: [ "iotdb11", "iotdb12" ]
    runs-on: ${{ matrix.os }}
    env:
      VERSION: 0.6.0-SNAPSHOT
    steps:
      - uses: actions/checkout@v2
      - name: A Lame Integration Test with Maven for IoTDB
        run: mvn test -q -Dtest=TagCapExpIT#${{matrix.DB-name}}_IT -DfailIfNoTests=false
      - uses: codecov/codecov-action@v1
        with:
          file: ./**/target/site/jacoco/jacoco.xml
          name: codecov
